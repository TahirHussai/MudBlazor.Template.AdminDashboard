@page "/user/List"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@using AdminDashboard.Server.Models
@using AdminDashboard.Server.Repository.Interface
@inject MudBlazor.ISnackbar snackBar
@inject NavigationManager _navManager

<h4>User  List</h4>
<br />
<MudContainer Class="d-flex justify-Left mb-2">
    <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.Add" Size="Size.Large" IconSize="Size.Large" Label="Add New User" Class="ma-2" @onclick="(e => CreateNewUser())" />
</MudContainer>
@if (toDoList != null && toDoList.Count() > 0)
{

    <MudTable Items="@toDoList" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Profile Image</MudTh>
            <MudTh>UserName</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Role</MudTh>
        </HeaderContent>

        <RowTemplate>
          
        <MudTd DataLabel="UserName">   <img src="images/@context.ProfilePicture" style="height:55px;width:90px" Alt="Mony the dog" Elevation="25" Class="rounded-lg" /> </MudTd>
        <MudTd DataLabel="UserName">@context.FirstName  @context.LastName</MudTd>
        <MudTd DataLabel="Email">@context.EmailAddress</MudTd>
        <MudTd DataLabel="Role">@context.UserRole</MudTd>
    <MudTd DataLabel="Action">
            @*<MudFab @onclick="@(()=>Edit(@context.UserId))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.UserId))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
     *@   </MudTd>
    </RowTemplate>
</MudTable>
}
else
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7"  />
    <MudAlert Severity="MudBlazor.Severity.Warning">No Record Found!</MudAlert>
}


@code {
    IEnumerable<UserModel> toDoList;

    [Inject]
    public IAuthenticationRepository  _Repo { get; set; }
    private bool _loading;
    protected async override Task OnInitializedAsync()
    {

        await GetData();
    }
    private async Task GetData()
    {
        toDoList = await _Repo.Get();
    }
    private void CreateNewUser()
    {
        _navManager.NavigateTo("/User/Create");
    }
    private void Edit(int Id)
    {
        _navManager.NavigateTo("/User/Edit/" + Id);
    }
    //private void Delete(int Id)
    //{
    //    _Repo.DeleteUserProfile(Id);
    //    BackToList();
    //}
    private void BackToList()
    {
        _navManager.NavigateTo("/", true);
        snackBar.Add("User Deleted.", MudBlazor.Severity.Success);
    }

}